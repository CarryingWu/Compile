S -> int identifier ( ) { MAIN
MAIN -> PROGRAM END
MAIN -> END
PROGRAM -> PROGRAM STATEMENT
PROGRAM -> STATEMENT
PROGRAM -> PROGRAM EXP
PROGRAM -> EXP
PROGRAM -> PROGRAM BLOCK
PROGRAM -> BLOCK
PROGRAM -> PROGRAM IFBLOCK
PROGRAM -> IFBLOCK
PROGRAM -> PROGRAM WHILEBLOCK
PROGRAM -> WHILEBLOCK
EXP -> identifier
EXP -> const
EXP -> ( EXP )
EXP -> EXP operator identifier
EXP -> EXP operator const
STATEMENT -> VARLIST SEMICOLON
STATEMENT -> CALL SEMICOLON
STATEMENT -> identifier assign EXP SEMICOLON
SEMICOLON -> ;
CALL -> identifier ( PARAMETER )
PARAMETER -> identifier
PARAMETER -> const
PARAMETER -> PARAMETER , identifier
PARAMETER -> PARAMETER , const
VARLIST -> int identifier
VARLIST -> VARLIST , identifier
VARLIST -> bool identifier
VARLIST -> VARLIST , identifier
VARLIST -> float identifier
VARLIST -> VARLIST , identifier
BLOCK -> { PROGRAM }
WHILEBLOCK -> WHILECAUSE BLOCK
WHILECAUSE -> while ( EXP )
IFCAUSE -> if ( EXP )
IFBLOCK -> IFCAUSE BLOCK
IFBLOCK -> ELSECAUSE BLOCK
ELSECAUSE -> IFCAUSE BLOCK else
END -> return EXP ; }
